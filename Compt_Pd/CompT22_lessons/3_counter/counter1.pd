#N canvas 154 513 1225 820 12;
#X floatatom 49 155 5 0 0 0 - - -;
#X obj 49 198 + 1;
#X floatatom 49 230 5 0 0 0 - - -;
#X obj 126 589 + 1;
#X obj 90 622 f;
#X obj 89 590 bng 15 250 50 0 empty empty empty 17 7 0 20 -258113 -1
-1;
#X floatatom 91 662 5 0 0 2 - - -;
#X msg 108 555 0;
#X floatatom 102 155 5 0 0 0 - - -;
#X floatatom 60 353 5 0 0 0 - - -;
#X obj 60 396 + 1;
#X floatatom 113 353 5 0 0 0 - - -;
#X obj 40 442 f;
#X text 34 30 1 - COUNTER. A counter is an algorithm that allows to
perform an arithmetic progression by adding recursively the same common
difference to the result of a sum.;
#X text 114 230 <-- result;
#X obj 246 710 counter2;
#X text 52 287 To make the sum recursive \, the result must be stored
in the <f> (float) object and then sent to the left inlet of the <sum>
object.;
#X text 169 153 <-- the common difference is linked to the cold inlet
of the <sum> object;
#X text 107 441 <--- the <float> object stores the result of the sum
and sends it back to the hot inlet of the <sum> object.;
#X text 114 525 1 counter reset by sending a 0 to the <f> object;
#X text 188 585 2 the progression starts with a series of <bang>. <float>
outputs its content as a result and \, in the same time \, sends it
to the hot inlet of the <sum> that performs the operation. The new
result is stored in the <float> but is released only after a new <bang>.
;
#X text 87 712 go to counter2 -->;
#X text 33 97 The starting point of the count is linked to the hot
inlet of the <sum> object;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 7 0 4 1;
#X connect 8 0 1 1;
#X connect 9 0 10 0;
#X connect 10 0 12 1;
#X connect 11 0 10 1;
#X connect 12 0 10 0;
#X coords 0 205 0.5 204.5 84 60 0;
